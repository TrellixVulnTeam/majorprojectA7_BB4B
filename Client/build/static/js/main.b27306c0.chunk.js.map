{"version":3,"sources":["Home.js","utilities.js","SignLanguageToSpeech.js","404.js","App.js","index.js"],"names":["Home","href","rel","integrity","crossorigin","class","src","alt","width","to","type","labelMap","1","name","color","2","3","4","5","drawRect","boxes","classes","scores","threshold","imgWidth","imgHeight","ctx","i","length","y","x","height","text","strokeStyle","lineWidth","fillStyle","font","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","beginPath","fillText","Math","round","rect","stroke","SignLanguageToSpeech","webcamRef","useRef","canvasRef","runCoco","a","tf","net","setInterval","detect","current","video","readyState","videoWidth","videoHeight","img","fromPixels","resized","resizeBilinear","casted","cast","expanded","expandDims","executeAsync","obj","console","log","array","getContext","requestAnimationFrame","useEffect","className","ref","muted","style","position","marginLeft","marginRight","left","right","textAlign","zindex","NotFound","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b27306c0.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <link href=\"https://getbootstrap.com/docs/5.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-0evHe/X+R7YkIZDRvuzKMRqM+OrBnVFBL6DOitfPri4tjfHxaWutUpFmBp4vmVor\" crossorigin=\"anonymous\" />\r\n      <div class=\"px-4 py-5 my-5 text-center\">\r\n        <img class=\"d-block mx-auto mb-4\" src=\"https://upload.wikimedia.org/wikipedia/commons/7/7d/American_Sign_Language_ASL.svg\" alt=\"\" width=\"400\" />\r\n        <h1 class=\"display-5 fw-bold\">Sign Language To Speech Converter</h1>\r\n        <div class=\"col-lg-6 mx-auto\">\r\n          <p class=\"lead mb-4\">A language translator is extensively utilized by the mute people for converting and giving shape to their thoughts. A system is in urgent need of recognizing and translating sign language.</p>\r\n          <div class=\"d-grid gap-2 d-sm-flex justify-content-sm-center\">\r\n            <Link to=\"/SignLanguageToSpeech\"><button type=\"button\" class=\"btn btn-primary btn-lg px-4 gap-3\">Start Camera</button></Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home","// Define our labelmap\nconst labelMap = {\n    1:{name:'Hello', color:'red'},\n    2:{name:'Thank You', color:'yellow'},\n    3:{name:'I Love You', color:'lime'},\n    4:{name:'Yes', color:'blue'},\n    5:{name:'No', color:'purple'},\n}\n\n// Define a drawing function\nexport const drawRect = (boxes, classes, scores, threshold, imgWidth, imgHeight, ctx)=>{\n\n    for(let i=0; i<=boxes.length; i++){\n        if(boxes[i] && classes[i] && scores[i]>threshold){\n            // Extract variables\n            const [y,x,height,width] = boxes[i]\n            const text = classes[i]\n            \n            // Set styling\n            ctx.strokeStyle = labelMap[text]['color']\n            ctx.lineWidth = 10\n            ctx.fillStyle = 'white'\n            ctx.font = '30px Arial'       \n            \n            var msg = new SpeechSynthesisUtterance();\n            window.speechSynthesis.speak(msg);\n            \n            // DRAW!!\n            ctx.beginPath()\n            ctx.fillText(labelMap[text]['name'] + ' - ' + Math.round(scores[i]*100)/100, x*imgWidth, y*imgHeight-10)\n            ctx.rect(x*imgWidth, y*imgHeight, width*imgWidth/2, height*imgHeight/1.5);\n            ctx.stroke()\n\n            break;\n        }\n    }\n}","// Import dependencies\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport Webcam from \"react-webcam\";\r\nimport \"./App.css\";\r\nimport { nextFrame } from \"@tensorflow/tfjs\";\r\n// 2. TODO - Import drawing utility here\r\n// e.g. import { drawRect } from \"./utilities\";\r\nimport {drawRect} from \"./utilities\"; \r\n\r\nfunction SignLanguageToSpeech() {\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  // Main function\r\n  const runCoco = async () => {\r\n    // 3. TODO - Load network \r\n    // e.g. const net = await cocossd.load();\r\n    // https://tensorflowjsrealtimemodel.s3.au-syd.cloud-object-storage.appdomain.cloud/model.json\r\n    const net = await tf.loadGraphModel('https://tensorflowjsrealtimemodel.s3.au-syd.cloud-object-storage.appdomain.cloud/model.json')\r\n    \r\n    //  Loop and detect hands\r\n    setInterval(() => {\r\n      detect(net);\r\n    }, 16.7);\r\n  };\r\n\r\n  const detect = async (net) => {\r\n    // Check data is available\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ) {\r\n      // Get Video Properties\r\n      const video = webcamRef.current.video;\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      // Set video width\r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height = videoHeight;\r\n\r\n      // Set canvas height and width\r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n\r\n      // 4. TODO - Make Detections\r\n      const img = tf.browser.fromPixels(video)\r\n      const resized = tf.image.resizeBilinear(img, [640,480])\r\n      const casted = resized.cast('int32')\r\n      const expanded = casted.expandDims(0)\r\n      const obj = await net.executeAsync(expanded)\r\n      console.log(obj)\r\n\r\n      const boxes = await obj[1].array()\r\n      const classes = await obj[2].array()\r\n      const scores = await obj[4].array()\r\n      \r\n      // Draw mesh\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n\r\n      // 5. TODO - Update drawing utility\r\n      // drawSomething(obj, ctx)  \r\n      requestAnimationFrame(()=>{drawRect(boxes[0], classes[0], scores[0], 0.8, videoWidth, videoHeight, ctx)}); \r\n\r\n      tf.dispose(img)\r\n      tf.dispose(resized)\r\n      tf.dispose(casted)\r\n      tf.dispose(expanded)\r\n      tf.dispose(obj)\r\n\r\n    }\r\n  };\r\n\r\n  useEffect(()=>{runCoco()},[]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Webcam\r\n          ref={webcamRef}\r\n          muted={true} \r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 9,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n        />\r\n\r\n        <canvas\r\n          ref={canvasRef}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 8,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n        />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignLanguageToSpeech;","import React from 'react';\r\n\r\nfunction NotFound() {\r\n    return (\r\n        <div className='notFound'>\r\n            <h1>Not Found</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;\r\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport SignLanguageToSpeech from './SignLanguageToSpeech';\nimport NotFound from './404';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact><Home /></Route>\n        <Route path=\"/SignLanguageToSpeech\" exact><SignLanguageToSpeech /></Route>\n        <Route path=\"/404\" exact><NotFound /></Route>\n        <Redirect to=\"/404\" />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}